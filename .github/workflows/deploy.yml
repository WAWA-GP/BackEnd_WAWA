name: Deploy to AWS EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        # SSH 키 설정
        echo "$EC2_SSH_KEY" > private_key.pem
        chmod 600 private_key.pem
        
        # EC2에 배포
        ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USERNAME@$EC2_HOST << 'ENDSSH'
          cd /var/www/language-learning-api
          
          # Git pull
          git pull origin main
          
          # 가상환경 활성화
          source .venv/bin/activate
          
          # 의존성 업데이트
          pip install -r requirements.txt
          
          # 환경변수 업데이트
          cat > .env << 'EOF'
        ENVIRONMENT=production
        DEBUG=false
        HOST=0.0.0.0
        PORT=8000
        
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        SUPABASE_URL=${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}
        SECRET_KEY=${{ secrets.SECRET_KEY }}
        
        CORS_ORIGINS=http://localhost:3000,http://13.48.248.250
        EOF
          
          # Python 캐시 삭제
          find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
          find . -name "*.pyc" -delete
          
          # 서비스 재시작
          sudo systemctl restart language-learning-api
          
          # 상태 확인
          sleep 3
          curl -f http://localhost:8000/health || exit 1
          
          echo "✅ Deployment completed successfully!"
        ENDSSH
    
    - name: Cleanup
      if: always()
      run: rm -f private_key.pem
    
    - name: Notify success
      if: success()
      run: echo "🎉 Deployment successful!"
    
    - name: Notify failure
      if: failure()
      run: echo "❌ Deployment failed!"